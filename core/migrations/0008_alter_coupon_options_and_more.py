# Generated by Django 5.2.1 on 2025-06-21 08:43

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0007_alter_businesssettings_options_and_more'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='coupon',
            options={'ordering': ['-valid_from']},
        ),
        migrations.RemoveField(
            model_name='businesssettings',
            name='coupon_discount_percent',
        ),
        migrations.RemoveField(
            model_name='businesssettings',
            name='coupon_min_spend',
        ),
        migrations.RemoveField(
            model_name='businesssettings',
            name='loyalty_discount_percent',
        ),
        migrations.RemoveField(
            model_name='businesssettings',
            name='loyalty_points_required_for_discount',
        ),
        migrations.RemoveField(
            model_name='coupon',
            name='applicable_items',
        ),
        migrations.RemoveField(
            model_name='coupon',
            name='branch',
        ),
        migrations.RemoveField(
            model_name='coupon',
            name='discount_amount',
        ),
        migrations.RemoveField(
            model_name='coupon',
            name='discount_percent',
        ),
        migrations.RemoveField(
            model_name='coupon',
            name='min_spend',
        ),
        migrations.AddField(
            model_name='businesssettings',
            name='coupon_is_branch_specific',
            field=models.BooleanField(default=False, help_text='If checked, coupon codes can only be used at branches explicitly assigned to the coupon.'),
        ),
        migrations.AddField(
            model_name='businesssettings',
            name='coupon_loyalty_requirement_type',
            field=models.CharField(choices=[('none', 'No loyalty requirement'), ('min_spend', 'Minimum total spend'), ('min_visits', 'Minimum visits'), ('both', 'Minimum spend AND visits'), ('either', 'Minimum spend OR visits')], default='none', help_text="How loyalty affects coupon eligibility. 'Both' means customer must meet both criteria. 'Either' means customer meets at least one.", max_length=20),
        ),
        migrations.AddField(
            model_name='businesssettings',
            name='enable_coupon_codes',
            field=models.BooleanField(default=False, help_text='Allow the use of coupon codes in transactions.'),
        ),
        migrations.AddField(
            model_name='businesssettings',
            name='enable_loyalty_point_redemption',
            field=models.BooleanField(default=False, help_text='Allow customers to redeem loyalty points for discounts.'),
        ),
        migrations.AddField(
            model_name='businesssettings',
            name='loyalty_min_spend_for_coupon',
            field=models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text="Minimum total amount a customer must have spent to be eligible for a coupon. Required if loyalty requirement is not 'none'.", max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='businesssettings',
            name='loyalty_min_visits_for_coupon',
            field=models.IntegerField(blank=True, default=0, help_text="Minimum number of visits a customer must have made to be eligible for a coupon. Required if loyalty requirement is not 'none'.", null=True),
        ),
        migrations.AddField(
            model_name='businesssettings',
            name='loyalty_points_required_for_redemption',
            field=models.IntegerField(default=500, help_text='Minimum loyalty points a customer must have to redeem for a discount.'),
        ),
        migrations.AddField(
            model_name='businesssettings',
            name='loyalty_redemption_discount_type',
            field=models.CharField(choices=[('percentage', 'Percentage'), ('fixed', 'Fixed Amount')], default='percentage', help_text='Type of discount when loyalty points are redeemed.', max_length=10),
        ),
        migrations.AddField(
            model_name='businesssettings',
            name='loyalty_redemption_discount_value',
            field=models.DecimalField(decimal_places=2, default=5.0, help_text='Value of discount (e.g., 5 for 5% or 5000 for UGX 5000). If Percentage, value should be 0-100.', max_digits=10),
        ),
        migrations.AddField(
            model_name='businesssettings',
            name='loyalty_redemption_is_branch_specific',
            field=models.BooleanField(default=False, help_text='If checked, loyalty points can only be redeemed at the branch where they were earned.'),
        ),
        migrations.AddField(
            model_name='businesssettings',
            name='loyalty_redemption_max_discount_amount',
            field=models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='Maximum fixed amount discount (UGX) a loyalty redemption can provide. Leave 0 or blank for no max.', max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='coupon',
            name='business',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='coupons', to='core.business'),
        ),
        migrations.AddField(
            model_name='coupon',
            name='description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='coupon',
            name='discount_type',
            field=models.CharField(choices=[('percentage', 'Percentage'), ('fixed', 'Fixed Amount')], default='percentage', max_length=10),
        ),
        migrations.AddField(
            model_name='coupon',
            name='discount_value',
            field=models.DecimalField(decimal_places=2, default=1, help_text='If percentage, value is 0-100. If fixed, value is actual amount.', max_digits=10),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='coupon',
            name='minimum_spend',
            field=models.DecimalField(decimal_places=2, default=0.0, help_text='Minimum transaction amount required for this coupon to apply.', max_digits=10),
        ),
        migrations.AddField(
            model_name='coupon',
            name='valid_branches',
            field=models.ManyToManyField(blank=True, help_text="Branches where this coupon is valid. If left blank and 'Coupon is branch specific' is checked in Business Settings, this coupon will be invalid.", related_name='coupons', to='core.branch'),
        ),
        migrations.AlterField(
            model_name='coupon',
            name='usage_limit',
            field=models.IntegerField(blank=True, help_text='Maximum number of times this coupon can be used overall. Leave blank for unlimited.', null=True),
        ),
        migrations.AlterField(
            model_name='coupon',
            name='valid_from',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='coupon',
            name='valid_until',
            field=models.DateTimeField(blank=True, null=True),
        ),
    ]
